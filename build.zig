const std = @import("std");

pub fn build(b: *std.build.Builder) void {
    const optimize = b.standardOptimizeOption(.{});

    const lib = b.addStaticLibrary(.{
        .name = "pico",
        .target = std.zig.CrossTarget{
            .cpu_arch = .thumb,
            .cpu_model = .{ .explicit = &std.Target.arm.cpu.cortex_m0plus },
            .os_tag = .freestanding,
            .abi = .none,
        },
        .optimize = optimize,
    });

    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Headers
    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    // system
    lib.addIncludePath("/usr/include/newlib");

    // src/boards
    //lib.addIncludePath("src/boards/include");

    // src/common
    // Code that is common to all builds regardless of PICO_PLATFORM
    lib.addIncludePath("src/common/boot_picoboot/include");
    lib.addIncludePath("src/common/boot_uf2/include");
    lib.addIncludePath("src/common/pico_base/include");
    lib.addIncludePath("src/common/pico_binary_info/include");
    lib.addIncludePath("src/common/pico_bit_ops/include");
    lib.addIncludePath("src/common/pico_divider/include");
    lib.addIncludePath("src/common/pico_stdlib/include");
    lib.addIncludePath("src/common/pico_sync/include");
    lib.addIncludePath("src/common/pico_time/include");
    lib.addIncludePath("src/common/pico_usb_reset_interface/include");
    lib.addIncludePath("src/common/pico_util/include");

    // src/rp2040
    // Header files defining the RP2040 hardware
    // --- level hardware register #defines autogenerated from the RP2040 chip definition itself
    lib.addIncludePath("src/rp2040/hardware_regs/include");
    // --- C structures for accessing memory mapped registers
    lib.addIncludePath("src/rp2040/hardware_structs/include");

    // src/rp2_common
    //lib.addIncludePath("src/rp2_common/cmsis/include");
    //lib.addIncludePath("src/rp2_common/cmsis/stub/CMSIS/Core/Include");
    //lib.addIncludePath("src/rp2_common/cmsis/stub/CMSIS/Device/RaspberryPi/RP2040/Include");

    lib.addIncludePath("src/rp2_common/hardware_adc/include");
    lib.addIncludePath("src/rp2_common/hardware_base/include");
    lib.addIncludePath("src/rp2_common/hardware_claim/include");
    lib.addIncludePath("src/rp2_common/hardware_clocks/include");
    lib.addIncludePath("src/rp2_common/hardware_divider/include");
    lib.addIncludePath("src/rp2_common/hardware_dma/include");
    lib.addIncludePath("src/rp2_common/hardware_exception/include");
    lib.addIncludePath("src/rp2_common/hardware_flash/include");
    lib.addIncludePath("src/rp2_common/hardware_gpio/include");
    lib.addIncludePath("src/rp2_common/hardware_i2c/include");
    lib.addIncludePath("src/rp2_common/hardware_interp/include");
    lib.addIncludePath("src/rp2_common/hardware_irq/include");
    lib.addIncludePath("src/rp2_common/hardware_pio/include");
    lib.addIncludePath("src/rp2_common/hardware_pll/include");
    lib.addIncludePath("src/rp2_common/hardware_pwm/include");
    lib.addIncludePath("src/rp2_common/hardware_resets/include");
    lib.addIncludePath("src/rp2_common/hardware_rtc/include");
    lib.addIncludePath("src/rp2_common/hardware_spi/include");
    lib.addIncludePath("src/rp2_common/hardware_sync/include");
    lib.addIncludePath("src/rp2_common/hardware_timer/include");
    lib.addIncludePath("src/rp2_common/hardware_uart/include");
    lib.addIncludePath("src/rp2_common/hardware_vreg/include");
    lib.addIncludePath("src/rp2_common/hardware_watchdog/include");
    lib.addIncludePath("src/rp2_common/hardware_xosc/include");

    lib.addIncludePath("src/rp2_common/pico_platform/include");
    lib.addIncludePath("src/rp2_common/pico_stdio/include");
    lib.addIncludePath("src/rp2_common/pico_bootrom/include");

    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    // Sources
    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    // src/common
    // Code that is common to all builds regardless of PICO_PLATFORM
    lib.addCSourceFiles(&common_sources, &[_][]const u8{});

    lib.addAssemblyFile("src/rp2_common/hardware_divider/divider.S");
    lib.addAssemblyFile("src/rp2_common/hardware_divider/include/hardware/divider_helper.S");
    lib.addAssemblyFile("src/rp2_common/hardware_irq/irq_handler_chain.S");
    lib.addAssemblyFile("src/rp2_common/pico_platform/include/pico/asm_helper.S");
    lib.addCSourceFiles(&rp2_common_sources, &[_][]const u8{});

    lib.install();
    lib.installHeadersDirectory("src/common/boot_picoboot/include/boot", "boot");
    lib.installHeadersDirectory("src/common/boot_uf2/include/boot", "boot");
    lib.installHeadersDirectory("src/common/pico_base/include", "");
    lib.installHeadersDirectory("src/common/pico_binary_info/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_bit_ops/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_divider/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_stdlib/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_sync/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_time/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_usb_reset_interface/include/pico", "pico");
    lib.installHeadersDirectory("src/common/pico_util/include/pico", "pico");
}

const common_sources = [_][]const u8{
    "src/common/pico_sync/critical_section.c",
    "src/common/pico_sync/lock_core.c",
    "src/common/pico_sync/mutex.c",
    "src/common/pico_sync/sem.c",
    "src/common/pico_time/time.c",
    "src/common/pico_time/timeout_helper.c",
    "src/common/pico_util/datetime.c",
    "src/common/pico_util/pheap.c",
    "src/common/pico_util/queue.c",
};

const rp2_common_sources = [_][]const u8{
    //"src/rp2_common/cmsis/stub/CMSIS/Device/RaspberryPi/RP2040/Source/system_RP2040.c",

    "src/rp2_common/hardware_adc/adc.c",
    "src/rp2_common/hardware_claim/claim.c",
    "src/rp2_common/hardware_clocks/clocks.c",
    "src/rp2_common/hardware_dma/dma.c",
    "src/rp2_common/hardware_exception/exception.c",
    "src/rp2_common/hardware_flash/flash.c",
    "src/rp2_common/hardware_gpio/gpio.c",
    "src/rp2_common/hardware_i2c/i2c.c",
    "src/rp2_common/hardware_interp/interp.c",
    "src/rp2_common/hardware_irq/irq.c",
    "src/rp2_common/hardware_pio/pio.c",
    "src/rp2_common/hardware_pll/pll.c",
    "src/rp2_common/hardware_rtc/rtc.c",
    "src/rp2_common/hardware_spi/spi.c",
    "src/rp2_common/hardware_sync/sync.c",
    "src/rp2_common/hardware_timer/timer.c",
    "src/rp2_common/hardware_uart/uart.c",
    "src/rp2_common/hardware_vreg/vreg.c",
    "src/rp2_common/hardware_watchdog/watchdog.c",
    "src/rp2_common/hardware_xosc/xosc.c",

    "src/rp2_common/pico_platform/platform.c",
    "src/rp2_common/pico_stdio/stdio.c",
    "src/rp2_common/pico_bootrom/bootrom.c",
};
